<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[基于github pages + hexo的blog（二）博客源码同步]]></title>
    <url>%2F2018%2F12%2F11%2Fbuild-blog-2%2F</url>
    <content type="text"><![CDATA[一，上传到github 在你的github上建立博客源码目录，比如：yourname.github.io.source 将之前本地的hexo源码上传到该目录下 如果有使用第三方主题的 将之前安装的主题目录删除 将需要安装的主题fork到自己的github上，方便自己修改配置 使用 git submodule add 代替 git clone git submodule add https://github.com/kwens/hexo-theme-next themes/next 此时会自动生成一个.gitmodules文件 提交上述修改 二，修改主题配置 直接在 themes/yourthemes 目录下修改，并直接提交推送到你自己的仓库中 三，如何使用 已拉取过该项目的机子： git pull 拉取更新 git submodule update 拉取子模块更新 未拉取过该项目的机子： git clone 源码项目 git submodule update –init 初始化子模块 安装依赖包，开启本地调试，写文章等操作。 四，如何持续化集成发布文章市面上提供持续化集成的网站很多，此处选择使用AppVeyor 先注册一个AppVeyor账号，可以直接使用github账号 在github中生成一个token: 点击头像 -&gt; setting -&gt; Developer settings -&gt; Personal access tokens -&gt; Generate new token 选择条件生成即可。记住生成的token值。 在AppVeyor中 点击 settings -&gt; Encrypt YAML 将GitHub的token再加密一次，获得最终的token(该token用于最后的appveyor.yml文件)。 新建一个project，直接关联到github中博客源码项目 配置该project的环境变量(点击该project最右边的设置按钮，选择Enviroment)分别为： GIT_USER_EMAIL 你的github邮箱 GIT_USER_NAME 你的github账号名称 STATIC_SITE_REPO 你的github博客项目(不是源码项目)地址 TARGET_BRANCH 你的github博客项目(不是源码项目)主要分支 在博客源码添加appveyor.yml文件，文件内容如最后所示 将appveyor.yml提交至github即可。 1234567891011121314151617181920212223242526appveyor.yml脚本内容：clone_depth: 10environment: access_token: secure: 刚才的tokeninstall:- npm install- npm install -g hexo-cli- git submodule update --initbuild_script:- hexo generateartifacts:- path: publicon_success:- git config --global credential.helper store- ps: Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:access_token):x-oauth-basic@github.com`n"- git config --global user.email "%GIT_USER_EMAIL%"- git config --global user.name "%GIT_USER_NAME%"- git clone --depth 5 -q --branch=%TARGET_BRANCH% %STATIC_SITE_REPO% %TEMP%\static-site- cd %TEMP%\static-site- del * /f /q- for /d %%p IN (*) do rmdir "%%p" /s /q- SETLOCAL EnableDelayedExpansion &amp; robocopy "%APPVEYOR_BUILD_FOLDER%\public" "%TEMP%\static-site" /e &amp; IF !ERRORLEVEL! EQU 1 (exit 0) ELSE (IF !ERRORLEVEL! EQU 3 (exit 0) ELSE (exit 1))- git add -A- if "%APPVEYOR_REPO_BRANCH%"=="master" if not defined APPVEYOR_PULL_REQUEST_NUMBER (git diff --quiet --exit-code --cached || git commit -m "Update Static Site" &amp;&amp; git push origin %TARGET_BRANCH% &amp;&amp; appveyor AddMessage "Static Site Updated") 参考文章https://www.jianshu.com/p/5abacac4133chttps://formulahendry.github.io/2016/12/04/hexo-ci/https://blog.csdn.net/u011475210/article/details/79023429]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F11%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo!!!! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[基于github pages + hexo的blog（一）搭建]]></title>
    <url>%2F2018%2F12%2F10%2Fbuild-blog%2F</url>
    <content type="text"><![CDATA[一，基本安装 github中新建blog项目，项目名为：yourname.github.io（使用此后缀的github项目会自动开启github pages） 如果没有开启github pages，进入项目的setting中找到对应开启的地方进行开启。 本地下载hexo（前提：安装node） 全局安装hexo-cli：npm install -g hexo-cli 创建hexo项目：hexo init yourdir 本地调试：进入yourdir, 安装node依赖包，启用：hexo s –debug 打包： hexo g 配置github地址： 下载安装：hexo-deploy-git: npm i hexo-deploy-git –save 修改配置文件：_config.yml 提交打包后的文件：hexo d 访问yourname.github.io即可看到。 二，使用主题：https://hexo.io/zh-cn/docs/themes 可以在themes目录下新建你的主题：一个主题可能包括如下结构 12345├── _config.yml├── languages├── layout├── scripts└── source 我的博客使用的是第三方主题next: http://theme-next.iissnan.com/ 在博客源码目录下安装：git clone https://github.com/iissnan/hexo-theme-next themes/next 启用主题：修改_config.yml下的themes字段为next. theme: next 修改其他主题设定，请看文档。 绑定域名 注册域名，这里使用的是阿里域名，具体如何申请不再述说。 添加域名解析，例如： 在博客源码source目录下新建CNAME文件，并写入你的域名 重新打包并推送到你的github博客项目。 使用域名访问你的博客]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
